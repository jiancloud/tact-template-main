;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int queryId) inline {
    return (queryId);
}

;;
;; Type: Add
;; Header: 0x87d43ac2
;; TLB: add#87d43ac2 amount:uint32 = Add
;;

(slice, ((int))) $Add$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2278832834);
    var v'amount = sc_0~load_uint(32);
    return (sc_0, (v'amount));
}

;;
;; Type: Subtract
;; Header: 0x5c8e8db9
;; TLB: subtract#5c8e8db9 amount:uint32 = Subtract
;;

(slice, ((int))) $Subtract$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1552846265);
    var v'amount = sc_0~load_uint(32);
    return (sc_0, (v'amount));
}

;;
;; Type: Multiply
;; Header: 0x82491bc4
;; TLB: multiply#82491bc4 amount:uint32 = Multiply
;;

(slice, ((int))) $Multiply$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2185829316);
    var v'amount = sc_0~load_uint(32);
    return (sc_0, (v'amount));
}

;;
;; Type: Divide
;; Header: 0x7ca4745f
;; TLB: divide#7ca4745f amount:uint32 = Divide
;;

(slice, ((int))) $Divide$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2091152479);
    var v'amount = sc_0~load_uint(32);
    return (sc_0, (v'amount));
}

;;
;; Type: ReceiversContract
;;

builder $ReceiversContract$_store(builder build_0, (slice, int) v) inline {
    var (v'owner, v'val) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_int(v'val, 64);
    return build_0;
}

(slice, ((slice, int))) $ReceiversContract$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'val = sc_0~load_int(64);
    return (sc_0, (v'owner, v'val));
}

(slice, ((slice))) $ReceiversContract$init$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    return (sc_0, (v'owner));
}

(slice, int) $ReceiversContract$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$ReceiversContract$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice owner) = $sc~$ReceiversContract$init$_load();
        $sc.end_parse();
        return $ReceiversContract$_contract_init(owner);
    }
}

() $ReceiversContract$_contract_store((slice, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $ReceiversContract$_store(b, v);
    set_data(b.end_cell());
}